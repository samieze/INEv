1.) generate_network: 
	PARAMS:
	IN: /; 
	OUT: pickle file 'network' [matrice of nodes and event rates]

2.) generate_qwl:
	PARAMS:
	IN: primitive event types from pickle file 'network'
	OUT: pickle file 'current_wl' [list of queries]

3.) selectivites:
	PARAMS:
	IN: !TODO!! ATM acesses local variables of generate_qwl -> change to load pickles of network to get primEvents and generate all selectivities
	OUT: pickle file 'selectivities' [dict of pair selectivities]

4a.) write_config_single

4.) determine_single_selectivities:
	IN: config_single_selectivities, pickle current_wl
	OUT: pickle file 'singleSelectivities'

generate Topology in extra file! pickle graph, add commandline params etc


x.) combigen_short:
	IN:
	OUT: pickle file 'projrates' [dictionary: for each projecion (selectiviy, single match rate)], pickle file 'curcombi' [dictionary with "best" combination], !TODO! add: projfilterdict! as pickle

-> split projection enumeration and projrates generation from combination generation

		

