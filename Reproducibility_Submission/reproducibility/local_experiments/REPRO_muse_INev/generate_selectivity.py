"""
Initialize selectivities for given tuple of primitive event types (projlist) within interval [x,y].
"""



#selectivities =  {'AB': 0.12, 'AC': 0.15, 'AD': 0.2, 'AE': 0.2, 'BC': 0.15, 'BD': 0.1, 'BE': 0.133, 'CD': 0.175, 'CE': 0.125, 'DE': 0.018} # test steven 
#selectivities = {'AD': 0.0037245888910543176, 'DA': 0.0037245888910543176, 'CD': 0.0008879132613745659, 'DC': 0.0008879132613745659, 'ED': 1, 'DE': 1, 'BD': 0.0018844982575214873, 'DB': 0.0018844982575214873, 'BA': 1, 'AB': 1, 'CE': 0.007137079382563654, 'EC': 0.007137079382563654, 'AE': 1, 'EA': 1, 'BE': 0.00015063396012713037, 'EB': 0.00015063396012713037, 'BC': 1, 'CB': 1, 'AC': 0.006839025337673902, 'CA': 0.006839025337673902}
 #selectivities = {'HF':0.05, 'FH':0.05,'IF':0.05,'FI':0.05,'IE':0.05,'EI':0.05,'HC':0.05, 'CH':0.05,'HD':0.05, 'DH':0.05,'IB':0.05,'BI':0.05,'HI':0.05, 'IH':0.05, 'IC':0.05,'CI':0.05,'DI':0.05,'ID':0.05,  'IB':0.05,'BF': 0.05, 'FB': 0.05,'AB': 0.05,'AF': 0.05,'FA': 0.05,'BA':0.05,'AC':0.05,'CA':0.05, 'BC':0.05, 'CB':0.05,'BG':0.05, 'GB':0.05, 'AD': 0.05, 'DA':0.05, 'CD':0.05, 'DC':0.05, 'BD':0.05, 'DB': 0.05,  'AE':0.05, 'EA':0.05, 'CF':0.05, 'FC':0.05, 'CG': 0.05,  'GC':0.05, 'GF':0.05, 'FG':0.05,  'DF':0.05, 'DG':0.05 }
 #for i in selectivities.keys():
 #   selectivities[i] = 0.05
#selectivities = {'HM': 0.02555841424133275, 'MH': 0.02555841424133275, 'FL': 0.07560049766863353, 'LF': 0.07560049766863353, 'MI': 0.057447834292410065, 'IM': 0.057447834292410065, 'RJ': 1, 'JR': 1, 'DA': 1, 'AD': 1, 'LT': 1, 'TL': 1, 'RF': 1, 'FR': 1, 'LD': 0.04071504362140365, 'DL': 0.04071504362140365, 'FD': 0.0593894941927755, 'DF': 0.0593894941927755, 'HQ': 0.08137735006692921, 'QH': 0.08137735006692921, 'RL': 0.01981209370937667, 'LR': 0.01981209370937667, 'CT': 0.07869517065133344, 'TC': 0.07869517065133344, 'LA': 1, 'AL': 1, 'LB': 0.0043284171244014884, 'BL': 0.0043284171244014884, 'RS': 0.02779384286360396, 'SR': 0.02779384286360396, 'FJ': 0.021349682704402045, 'JF': 0.021349682704402045, 'LM': 0.03554235049388178, 'ML': 0.03554235049388178, 'IJ': 0.0830650318111596, 'JI': 0.0830650318111596, 'FM': 0.09731076631654505, 'MF': 0.09731076631654505, 'QS': 1, 'SQ': 1, 'HG': 0.09573746309806355, 'GH': 0.09573746309806355, 'FH': 1, 'HF': 1, 'GS': 1, 'SG': 1, 'EG': 0.061303388122727266, 'GE': 0.061303388122727266, 'TS': 0.09072277436069759, 'ST': 0.09072277436069759, 'FI': 1, 'IF': 1, 'MA': 1, 'AM': 1, 'DB': 1, 'BD': 1, 'MT': 0.004663435108002795, 'TM': 0.004663435108002795, 'LG': 0.06455442741201316, 'GL': 0.06455442741201316, 'LQ': 0.08694231188877719, 'QL': 0.08694231188877719, 'FS': 1, 'SF': 1, 'RM': 0.06660289178765078, 'MR': 0.06660289178765078, 'ES': 0.08017138472876521, 'SE': 0.08017138472876521, 'HD': 1, 'DH': 1, 'EH': 0.02817688339691022, 'HE': 0.02817688339691022, 'ED': 1, 'DE': 1, 'HC': 1, 'CH': 1, 'RI': 0.05823988071489057, 'IR': 0.05823988071489057, 'EI': 0.0664480930741425, 'IE': 0.0664480930741425, 'MG': 0.0024089205047883666, 'GM': 0.0024089205047883666, 'JT': 1, 'TJ': 1, 'LC': 1, 'CL': 1, 'HB': 1, 'BH': 1, 'CS': 1, 'SC': 1, 'AI': 0.04020413877134295, 'IA': 0.04020413877134295, 'QA': 1, 'AQ': 1, 'DJ': 0.038384650193279364, 'JD': 0.038384650193279364, 'AJ': 1, 'JA': 1, 'RD': 1, 'DR': 1, 'RC': 1, 'CR': 1, 'FC': 1, 'CF': 1, 'LS': 1, 'SL': 1, 'QB': 1, 'BQ': 1, 'GB': 1, 'BG': 1, 'AB': 0.045163840660526776, 'BA': 0.045163840660526776, 'RE': 1, 'ER': 1, 'GT': 1, 'TG': 1, 'RG': 0.07449056204784804, 'GR': 0.07449056204784804, 'EB': 0.07798990763206969, 'BE': 0.07798990763206969, 'FG': 0.03763900301884787, 'GF': 0.03763900301884787, 'HA': 0.054059054577178696, 'AH': 0.054059054577178696, 'HJ': 0.03417926758452852, 'JH': 0.03417926758452852, 'FB': 1, 'BF': 1, 'EM': 1, 'ME': 1, 'EA': 1, 'AE': 1, 'GQ': 1, 'QG': 1, 'FT': 0.04779169360778494, 'TF': 0.04779169360778494, 'BT': 0.029582895461112847, 'TB': 0.029582895461112847, 'IT': 0.00639196910330144, 'TI': 0.00639196910330144, 'BJ': 0.06126763966161103, 'JB': 0.06126763966161103, 'EF': 0.02307548249344898, 'FE': 0.02307548249344898, 'MC': 0.05592333849022784, 'CM': 0.05592333849022784, 'QI': 1, 'IQ': 1, 'DT': 0.08722132630226484, 'TD': 0.08722132630226484, 'GJ': 0.04346462831300258, 'JG': 0.04346462831300258, 'QJ': 0.08442910301046049, 'JQ': 0.08442910301046049, 'EC': 0.06921351806411064, 'CE': 0.06921351806411064, 'GC': 0.058548299283125285, 'CG': 0.058548299283125285, 'EJ': 0.03573383775425937, 'JE': 0.03573383775425937, 'BS': 0.0699861992091043, 'SB': 0.0699861992091043, 'DI': 0.07850183651608533, 'ID': 0.07850183651608533, 'CD': 1, 'DC': 1, 'RA': 1, 'AR': 1, 'QT': 0.0486354045189073, 'TQ': 0.0486354045189073, 'FQ': 0.07256456383414284, 'QF': 0.07256456383414284, 'GD': 0.02527737828939919, 'DG': 0.02527737828939919, 'EL': 1, 'LE': 1, 'CJ': 0.08408091497310978, 'JC': 0.08408091497310978, 'MS': 1, 'SM': 1, 'CQ': 1, 'QC': 1, 'AS': 1, 'SA': 1, 'MJ': 0.04111406096336653, 'JM': 0.04111406096336653, 'IS': 1, 'SI': 1, 'HT': 1, 'TH': 1, 'CB': 0.07066679351126853, 'BC': 0.07066679351126853, 'JS': 1, 'SJ': 1, 'FA': 1, 'AF': 1, 'CI': 0.009072865333273523, 'IC': 0.009072865333273523, 'EQ': 0.006772956224137712, 'QE': 0.006772956224137712, 'CA': 0.01970292033331929, 'AC': 0.01970292033331929, 'BI': 0.03573688880195991, 'IB': 0.03573688880195991, 'ET': 0.03223679404570032, 'TE': 0.03223679404570032, 'LI': 0.09233309947438469, 'IL': 0.09233309947438469, 'GI': 0.039494272985088216, 'IG': 0.039494272985088216, 'LJ': 0.07181145200692975, 'JL': 0.07181145200692975, 'MD': 1, 'DM': 1, 'LH': 1, 'HL': 1, 'RT': 0.03340738827222581, 'TR': 0.03340738827222581, 'DS': 0.03251885946554714, 'SD': 0.03251885946554714, 'RQ': 1, 'QR': 1, 'MB': 0.004361587662396711, 'BM': 0.004361587662396711, 'RH': 0.01208969098040625, 'HR': 0.01208969098040625, 'QD': 0.024228767839953428, 'DQ': 0.024228767839953428, 'AT': 0.09268679170364946, 'TA': 0.09268679170364946, 'HS': 0.022427471009740924, 'SH': 0.022427471009740924, 'RB': 1, 'BR': 1, 'HI': 0.07871297632557905, 'IH': 0.07871297632557905, 'MQ': 0.09004466112854584, 'QM': 0.09004466112854584, 'GA': 1, 'AG': 1}


import random as rd
import numpy as np
import sys
from generate_qwls import *

with open('network',  'rb') as  nw_file:
        nw = pickle.load(nw_file)
    
PrimitiveEvents = list(string.ascii_uppercase[:len(nw[0])])

def initialize_selectivities(primEvents,x,y): 

   
    projlist = generate_twosets(primEvents)       
    projlist = list(set(projlist))
    selectivities = {}
    selectivity = 0
    for i in projlist: 
        #if len(filter_numbers(i)) >1 :                  
            selectivity = rd.uniform(0.0,0.3)             
            if selectivity > 0.2:
                selectivity = 1
                selectivities[str(i)] =  selectivity
                selectivities[str(changeorder(i))] =  selectivity
            if selectivity < 0.2: 
                selectivity = rd.uniform(x,y)                
                selectivities[str(i)] =  selectivity
                selectivities[str(changeorder(i))] =  selectivity
    return selectivities


def main():
  """default selectivity interval"""
  x = 0.001
  y = 0.01
  

  primEvents = PrimitiveEvents
  
  if len(sys.argv) > 1: 
      y = float(sys.argv[1])
      x = x/10
  if len(sys.argv) >2 :
      y = float(sys.argv[1])
      x = float(sys.argv[2])
 
  selectivities = initialize_selectivities(primEvents,x,y)
  
  print(len(selectivities.keys()))
  print("SELECTIVITIES")
  print("--------------")
    

  print(selectivities)
  
  
  
  
  #export minimal selectivity, average/median selectivity
  selectivitiesExperimentData = [x, np.median(list(selectivities.values()))]
  with open('selectivitiesExperimentData', 'wb') as selectivitiesExperimentDataFile:
      pickle.dump(selectivitiesExperimentData, selectivitiesExperimentDataFile)

  with open('selectivities', 'wb') as selectivity_file:
    pickle.dump(selectivities,  selectivity_file)   
    
 
  
if __name__ == "__main__":
    main()



    
